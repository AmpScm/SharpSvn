#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
using namespace System;
using namespace System;
ref class SharpSvnStrings;


/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Resources.Tools.StronglyTypedResourceBuilder", L"2.0.0.0"), 
System::Diagnostics::DebuggerNonUserCodeAttribute, 
System::Runtime::CompilerServices::CompilerGeneratedAttribute]
ref class SharpSvnStrings {
    
    private: static ::System::Resources::ResourceManager^  resourceMan;
    
    private: static ::System::Globalization::CultureInfo^  resourceCulture;
    
    protected private: [System::Diagnostics::CodeAnalysis::SuppressMessageAttribute(L"Microsoft.Performance", L"CA1811:AvoidUncalledPrivateCode")]
    SharpSvnStrings();
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    internal: [System::ComponentModel::EditorBrowsableAttribute(::System::ComponentModel::EditorBrowsableState::Advanced)]
    static property ::System::Resources::ResourceManager^  ResourceManager {
        ::System::Resources::ResourceManager^  get();
    }
    
    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    internal: [System::ComponentModel::EditorBrowsableAttribute(::System::ComponentModel::EditorBrowsableState::Advanced)]
    static property ::System::Globalization::CultureInfo^  Culture {
        ::System::Globalization::CultureInfo^  get();
        System::Void set(::System::Globalization::CultureInfo^  value);
    }
    
    /// <summary>
    ///   Looks up a localized string similar to One or more items in the list are null.
    /// </summary>
    internal: static property System::String^  ItemInListIsNull {
        System::String^  get();
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The parent window object has no Win32 handle.
    /// </summary>
    internal: static property System::String^  ParentWindowHasNoWindowHandle {
        System::String^  get();
    }
    
    /// <summary>
    ///   Looks up a localized string similar to This function is not available from managed code. .
    /// </summary>
    internal: static property System::String^  SvnAuthManagedPlaceholder {
        System::String^  get();
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified target is not a valid Path target.
    /// </summary>
    internal: static property System::String^  TheTargetIsNotAValidPathTarget {
        System::String^  get();
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified target is not a valur Uri or Path target.
    /// </summary>
    internal: static property System::String^  TheTargetIsNotAValidUriOrPathTarget {
        System::String^  get();
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified target is not a valid Uri target.
    /// </summary>
    internal: static property System::String^  TheTargetIsNotAValidUriTarget {
        System::String^  get();
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The passed Uri is not absolute.
    /// </summary>
    internal: static property System::String^  UriIsNotAbsolute {
        System::String^  get();
    }
};


inline SharpSvnStrings::SharpSvnStrings() {
}

inline ::System::Resources::ResourceManager^  SharpSvnStrings::ResourceManager::get() {
    if (System::Object::ReferenceEquals(resourceMan, nullptr)) {
        ::System::Resources::ResourceManager^  temp = (gcnew ::System::Resources::ResourceManager(L"SharpSvnStrings", SharpSvnStrings::typeid->Assembly));
        resourceMan = temp;
    }
    return resourceMan;
}

inline ::System::Globalization::CultureInfo^  SharpSvnStrings::Culture::get() {
    return resourceCulture;
}
inline System::Void SharpSvnStrings::Culture::set(::System::Globalization::CultureInfo^  value) {
    resourceCulture = value;
}

inline System::String^  SharpSvnStrings::ItemInListIsNull::get() {
    return ResourceManager->GetString(L"ItemInListIsNull", resourceCulture);
}

inline System::String^  SharpSvnStrings::ParentWindowHasNoWindowHandle::get() {
    return ResourceManager->GetString(L"ParentWindowHasNoWindowHandle", resourceCulture);
}

inline System::String^  SharpSvnStrings::SvnAuthManagedPlaceholder::get() {
    return ResourceManager->GetString(L"SvnAuthManagedPlaceholder", resourceCulture);
}

inline System::String^  SharpSvnStrings::TheTargetIsNotAValidPathTarget::get() {
    return ResourceManager->GetString(L"TheTargetIsNotAValidPathTarget", resourceCulture);
}

inline System::String^  SharpSvnStrings::TheTargetIsNotAValidUriOrPathTarget::get() {
    return ResourceManager->GetString(L"TheTargetIsNotAValidUriOrPathTarget", resourceCulture);
}

inline System::String^  SharpSvnStrings::TheTargetIsNotAValidUriTarget::get() {
    return ResourceManager->GetString(L"TheTargetIsNotAValidUriTarget", resourceCulture);
}

inline System::String^  SharpSvnStrings::UriIsNotAbsolute::get() {
    return ResourceManager->GetString(L"UriIsNotAbsolute", resourceCulture);
}
