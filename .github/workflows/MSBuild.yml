name: MSBuild

on:
  push:
    branches: [ main, stable/* ]
  pull_request:
    branches: [ main, stable/* ]

env:
  SOLUTION_FILE_PATH: build/src/SharpSvn.sln
  nant: '${{ github.workspace }}/build/imports/NAnt.0.92.0/tools/nant.exe'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Git Checkout
      uses: actions/checkout@v2
      with:
        path: build

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1

    - name: Install NAnt
      working-directory: build/imports/
      run: nuget.exe install NAnt

    - name: Cache preparations
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          build/imports/release
          !build/imports/release/bin
          !build/imports/release/bin-*
        key: ${{runner.os}}-MSBuild-${{ hashFiles('build/imports/*.build') }}-${{ hashFiles('build/imports/scripts/*.build') }}

    - name: Cache Import Downloads
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: |
          build/imports/downloads
        key: ${{runner.os}}-Import-Downloads-${{ hashFiles('build/imports/*.build') }}

    - name: Run NAnt preparations
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: build
      run: ${{env.nant}} -f:tools/buildbot.build buildbot-build

    - name: Setup version
      working-directory: build
      run: cmd.exe /C scripts\gh-version-setup ${{ github.run_number }}
      
    - name: Run nuget
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build-x86
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /r /v:m /p:Platform=x86 /p:Configuration=Release ${{env.SOLUTION_FILE_PATH}} /p:BuildBotBuild=true @build\scripts\msbuild-version.rsp

    - name: Build-x64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /r /v:m /p:Platform=x64 /p:Configuration=Release ${{env.SOLUTION_FILE_PATH}} /p:BuildBotBuild=true @build\scripts\msbuild-version.rsp

    - name: Build-x86-Core
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /r /v:m /p:Platform=x86 /p:Configuration=ReleaseCore ${{env.SOLUTION_FILE_PATH}} /p:BuildBotBuild=true @build\scripts\msbuild-version.rsp

    - name: Build-x64-Core
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /r /v:m /p:Platform=x64 /p:Configuration=ReleaseCore ${{env.SOLUTION_FILE_PATH}} /p:BuildBotBuild=true @build\scripts\msbuild-version.rsp

    - name: Build-arm64-Core
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /r /v:m /p:Platform=ARM64 /p:Configuration=ReleaseCore ${{env.SOLUTION_FILE_PATH}} /p:BuildBotBuild=true @build\scripts\msbuild-version.rsp

#    - name: VSTest-x86
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: vstest.console.exe /InIsolation /Platform:x86 build/src/SharpSvn.Tests/bin/x86/Release/SharpSvn.Tests.dll "--testcasefilter:TestCategory!=NeedsNetwork"
#
#    - name: VSTest-x64
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: vstest.console.exe /InIsolation /Platform:x64 build/src/SharpSvn.Tests/bin/x64/Release/SharpSvn.Tests.dll "--testcasefilter:TestCategory!=NeedsNetwork"
#
#    - name: VSTest-Core-x86
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: vstest.console.exe /InIsolation /Platform:x86 build/src/SharpSvn.Tests/bin/x86/ReleaseCore/SharpSvn.Tests.dll "--testcasefilter:TestCategory!=NeedsNetwork"
#
#    - name: VSTest-Core-x64
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: vstest.console.exe /InIsolation /Platform:x64 build/src/SharpSvn.Tests/bin/x64/ReleaseCore/SharpSvn.Tests.dll "--testcasefilter:TestCategory!=NeedsNetwork"

    - name: Create nupkg files
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: cmd.exe /C build\scripts\gh-build-nuget.cmd

    - name: Package nupkg files
      uses: actions/upload-artifact@v2
      with:
        name: nupkg-files
        path: build/nuspec/bin/*.nupkg
