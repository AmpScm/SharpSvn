<?xml version="1.0" ?>
<project basedir="..">
    <target name="gen-dev" depends="extract,checkout">
    <if test="${not directory::exists(wc)}">
      <Svn>
        <arg line="co https://svn.apache.org/repos/asf/subversion/trunk ${wc}" if="${branch == '' and tag == ''}" />
        <arg line="co https://svn.apache.org/repos/asf/subversion/branches/${branch} ${wc}" if="${branch != ''}" />
        <arg line="co https://svn.apache.org/repos/asf/subversion/tags/${tag} ${wc}" if="${tag != ''}" />
      </Svn>
    </if>
    
    <!-- Calculate the branch suffix via an ugly hack -->
    <exec program="svn.exe" output="build\svn.wc.info">
      <arg line="info --xml ${wc}" />
    </exec>
    <xmlpeek file="build\svn.wc.info" xpath="//url" property="wc.url" />
    <property name="wc.branch.start" value="${string::last-index-of(wc.url,'/')}" />
    <property name="wc.branch" value="${string::substring(wc.url, int::parse(wc.branch.start)+1, string::get-length(wc.url)-int::parse(wc.branch.start)-1)}" />

    <property name="impBase" value="../build/x64" overwrite="false" if="${platform=='x64'}"/>
    <property name="impBase" value="../build/win32" overwrite="false" />

    <if test="${wc.branch &gt; '1.9.'}">
      <exec program="python.exe" workingdir="${wc}" verbose="true">
        <arg line="gen-make.py" />
        <arg line="-t vcproj" />
        <arg line="--vsnet-version=${VSversion}" />
        <arg value="--with-httpd=${httpdDir}"     if="${buildHttpd}" />
        <arg value="--with-apr=${intDir}" />
        <arg value="--with-apr-util=${intDir}" />
        <arg value="--with-berkeley-db=${intDir}" />
        <arg value="--with-openssl=${intDir}" />
        <arg value="--with-zlib=${intDir}" />
        <arg value="--with-serf=${intDir}"        if="${wc.branch &gt; '1.9.'}" />
        <arg value="--with-sasl=${intDir}" />
        <arg value="--with-sqlite=${intDir}" />
        <arg value="--with-libintl=${intDir}"     if="${intl != 'none'}"/>
        <arg value="--with-swig=${path::get-full-path(swigDir)}"
                                                  if="${property::exists('withSwig')}" />
        <arg value="--with-jdk=${javaHome}"       if="${javaHome != ''}" />
        <arg value="--with-junit=${junitJar}"     if="${javaHome != ''}" />
        <arg value="--disable-shared"             if="${(static=='true') or (svnStatic=='true')}"/>
        <arg value="--with-static-apr"            if="${((static=='true') or (svnStatic=='true')) and botBuild == 'false'}" />
        <arg value="--with-static-openssl"        if="${((static=='true') or (svnStatic=='true')) and botBuild == 'false'}" />
      </exec>
    </if>
    <if test="${wc.branch &lt; '1.9.'}">
      <exec program="python.exe" workingdir="${wc}" verbose="true">
        <arg line="gen-make.py" />
        <arg line="-t vcproj" />
        <arg line="--vsnet-version=${VSversion}" />
        <arg value="--with-httpd=${httpdDir}" if="${buildHttpd == 'true'}" />
        <!-- apr and apr-util locations are implied via httpd -->
        <arg value="--with-berkeley-db=${intDir}" />
        <arg value="--with-openssl=${impBase}/openssl" />
        <arg value="--with-zlib=${zlibDir}" />
        <arg value="--with-neon=${impBase}/neon" if="${wc.branch &lt; '1.8.'}" />
        <arg value="--with-serf=${impBase}/serf" if="${wc.branch &gt; '1.8.'}" />
        <arg value="--with-sasl=${intDir}" />
        <arg value="--with-sqlite=${intDir}" />
        <arg value="--enable-nls" if="${intl != 'none'}"/>
        <arg value="--with-swig=${path::get-full-path(swigDir)}" if="${property::exists('withSwig')}" />
        <arg value="--with-jdk=${javaHome}" if="${javaHome != ''}" />
        <arg value="--with-junit=${junitJar}" if="${javaHome != ''}" />
        <arg value="--disable-shared" if="${(static=='true') or (svnStatic=='true')}"/>
        <arg value="--with-static-apr" if="${wc.branch &gt;= '1.8.' and ((static=='true') or (svnStatic=='true')) and botBuild == 'false'}" />
        <arg value="--with-static-openssl" if="${wc.branch &gt;= '1.8.' and ((static=='true') or (svnStatic=='true')) and botBuild == 'false'}" />
      </exec>
      <!-- Pre 1.9 the test suite expects this dll here -->
      <copy todir="${intDir}/lib">
        <fileset basedir="${intDir}/bin">
          <include name="libsasl.dll" />
        </fileset>
      </copy>
      <copy tofile="${intDir}/lib/${libDb}d.lib" file="${intDir}/lib/${libDb}.lib" />
      <copy tofile="${intDir}/bin/${libDb}d.dll" file="${intDir}/bin/${libDb}.dll" />
      <!-- Pre 1.9 expects libdb44.dll in $PATH, as it copies libdb44d.dll -->
      <copy tofile="${release}/bin/${libDb}.dll" file="${intDir}/bin/${libDb}.dll" />
      
      <!-- From APR -->
      <copy todir="${aprUtilDir}/${aprRelSubdir}" if="${not static}">
        <fileset basedir="${aprUtilDir}/xml/expat/lib/${aprStaticSubdir}">
          <include name="*.lib" />
          <include name="*.dll" />
          <include name="*.pdb" />
        </fileset>
      </copy>
      <copy todir="${aprDir}/Release" if="${aprRelSubdir != 'Release'}">
        <fileset basedir="${aprDir}/${aprRelSubdir}">
          <include name="*.lib" />
          <include name="*.dll" />
          <include name="*.pdb" />
        </fileset>
      </copy>
      <copy todir="${aprDir}/Debug" if="${aprRelSubdir != 'Debug'}">
        <fileset basedir="${aprDir}/${aprRelSubdir}">
          <include name="*.lib" />
          <include name="*.dll" />
          <include name="*.pdb" />
        </fileset>
      </copy>
      <copy todir="${aprDir}/LibR" if="${aprRelSubdir != 'LibR'}">
        <fileset basedir="${aprDir}/${aprRelSubdir}">
          <include name="*.lib" />
          <include name="*.dll" />
          <include name="*.pdb" />
        </fileset>
      </copy>
      <copy todir="${aprDir}/LibD" if="${aprRelSubdir != 'LibR'}">
        <fileset basedir="${aprDir}/${aprRelSubdir}">
          <include name="*.lib" />
          <include name="*.dll" />
          <include name="*.pdb" />
        </fileset>
      </copy>

      <copy todir="${aprUtilDir}/Release" if="${aprRelSubdir != 'Release'}">
        <fileset basedir="${aprUtilDir}/${aprRelSubdir}">
          <include name="*.lib" />
          <include name="*.dll" />
          <include name="*.pdb" />
        </fileset>
      </copy>
      <copy todir="${aprUtilDir}/Debug" if="${aprRelSubdir != 'Debug'}">
        <fileset basedir="${aprUtilDir}/${aprRelSubdir}">
          <include name="*.lib" />
          <include name="*.dll" />
          <include name="*.pdb" />
        </fileset>
      </copy>
      <copy todir="${aprUtilDir}/LibR" if="${aprRelSubdir != 'LibR'}">
        <fileset basedir="${aprUtilDir}/${aprRelSubdir}">
          <include name="*.lib" />
          <include name="*.dll" />
          <include name="*.pdb" />
        </fileset>
      </copy>
      <copy todir="${aprUtilDir}/LibD" if="${aprRelSubdir != 'LibR'}">
        <fileset basedir="${aprUtilDir}/${aprRelSubdir}">
          <include name="*.lib" />
          <include name="*.dll" />
          <include name="*.pdb" />
        </fileset>
      </copy>
      <copy todir="build/${platform}/lib/release" flatten="true">
        <fileset>
          <include name="${aprDir}/${aprRelSubdir}/*.lib" />
          <include name="${aprUtilDir}/${aprRelSubdir}/*.lib" />
          <include name="${aprUtilDir}/xml/expat/lib/${aprRelSubdir}/*.lib" />
        </fileset>
      </copy>
      <copy todir="build/${platform}/lib/LibR" flatten="true">
        <fileset>
          <include name="${aprDir}/LibR/*.lib" />
          <include name="${aprUtilDir}/LibR/*.lib" />
          <include name="${aprUtilDir}/xml/expat/lib/LibR/*.lib" />
        </fileset>
      </copy>
      <copy todir="build/${platform}/lib/debug" flatten="true">
        <fileset>
          <include name="${aprDir}/${aprRelSubdir}/*.lib" />
          <include name="${aprUtilDir}/${aprRelSubdir}/*.lib" />
          <include name="${aprUtilDir}/xml/expat/lib/${aprRelSubdir}/*.lib" />
        </fileset>
      </copy>
      
      <!-- Fake direct result for subversion to hide platforms -->
      <copy todir="build/${platform}/lib/include">
        <fileset basedir="${release}/include/apr-1">
          <include name="**/*.h" />
        </fileset>
      </copy>
      <copy todir="build/${platform}/lib/xml/expat/lib" file="${intDir}/include/expat.h" />
      <copy todir="build/${platform}/lib/include">
        <fileset basedir="${aprDir}/include">
          <include name="arch/win32/**.h" />
        </fileset>
      </copy>
      <copy todir="build/${platform}/lib/include">
        <fileset basedir="${release}/include">
          <include name="**.h" />
        </fileset>
      </copy>
      <if test="${platform == 'win32'}">
        <copy todir="build/win32/lib/lib">
          <fileset basedir="${release}/lib">
            <include name="libdb*.lib" />
            <include name="libeay32.lib" />
            <include name="ssleay32.lib" />
            <include name="intl3_svn.lib" />
            <include name="xml.lib" />
            <include name="*apr-1.lib" />
            <include name="*aprutil-1.lib" />
          </fileset>
        </copy>
      </if>
      <if test="${platform == 'x64'}">
        <copy todir="${release}/lib-x64">
          <fileset basedir="SharpSvn-SvnI18n/bin/${platform}/release">
            <include name="*.lib" />
          </fileset>
        </copy>
        <copy todir="build/x64/lib/lib">
          <fileset basedir="${release}/lib-x64">
            <include name="xml.lib" />
            <include name="libeay32.lib" />
            <include name="ssleay32.lib" />
            <include name="*apr-1.lib" />
            <include name="*aprutil-1.lib" />
            <include name="intl3_svn.lib" />
            <include name="libdb*.lib" />
          </fileset>
        </copy>
      </if>
      <copy todir="build/${platform}/lib/include" flatten="true">
        <fileset basedir="${dbWindowsDir}">
          <include name="*.h" />
        </fileset>
      </copy>
      <copy tofile="build/${platform}/lib/release/libapr-1.lib" file="build/${platform}/lib/lib/apr-1.lib" if="${static=='true'}" />
      <copy tofile="build/${platform}/lib/release/libaprutil-1.lib" file="build/${platform}/lib/lib/aprutil-1.lib" if="${static=='true'}" />
      <copy todir="build/${platform}/lib/include" flatten="true" if="${javaHome != ''}">
        <fileset basedir="${javaHome}/include">
          <include name="*.h" />
          <include name="win32/*.h" />
        </fileset>
      </copy>
      <copy todir="${intDir}\inc">
        <fileset basedir="${intDir}\include">
          <include name="sqlite*.h" />
        </fileset>
      </copy>
      
      <copy todir="${release}/include">
        <fileset basedir="${zlibDir}">
          <include name="zlib.h" />
          <include name="zconf.h" />
        </fileset>
      </copy>
    </if>
    <echo message="@echo off" file="${wc}/build/${platform}/build_zlib.bat" />  
  </target>
</project>