<?xml version="1.0" ?>
<project basedir=".." default="build">
  <!-- This nant script is used by the SharpSvn buildbot -->
  
  <property name="programfilesX86" value="C:\Program Files (x86)" overwrite="false" />
  <property name="nantExe" value="${assembly::get-location(nant::get-assembly())}" />
  <property name="buildImports" value="true" overwrite="false" />
  
  <if test="${property::exists('build.include')}">
    <include buildfile="${build.include}" />
  </if>
  
  <target name="prepare">
    <exec program="svn.exe" output=".svn-info"><arg line="info . --xml" /></exec>
    <xmlpeek file=".svn-info" xpath="/info/entry/url" property="svn_url" />
    <xmlpeek file=".svn-info" xpath="/info/entry/@revision" property="svn_rev" />
    <exec program="svn.exe">
      <arg line="checkout ${svn_url}" unless="${directory::exists('v40')}" />
      <arg line="update"                  if="${directory::exists('v40')}" />
      <arg line="-r ${svn_rev} v40/" />      
    </exec>
    
  </target>
  
  <target name="build" depends="prepare">
    <exec program="svn.exe" output=".svn-info"><arg line="info imports\default.build --xml" /></exec>
    <xmlpeek file=".svn-info" xpath="/info/entry/commit/@revision" property="imports-rev" />
    <xmlpeek file=".svn-info" xpath="/info/entry/@revision" property="checkout-rev" />    
    
    <loadfile file="imports/build/.imports-rev" property="last-rev" if="${file::exists('imports/build/.imports-rev')}" />
    <if test="${property::exists('last-rev') and (last-rev != imports-rev)}">
      <exec program="cmd.exe" failonerror="false">
        <arg line="/c rmdir imports\build imports\release v40\imports\build v40\imports\release /s /q" />
      </exec>
    </if>
  
    <exec program="cmd.exe" workingdir="imports" if="${buildImports}">
      <arg line='/s /c ""${programfilesX86}\Microsoft Visual Studio 9.0\VC\vcvarsall.bat" x86 &amp;&amp;' />
      <arg line='"${nantExe}" build"' />
    </exec>
    
    <exec program="cmd.exe" workingdir="imports" if="${buildImports}">
      <arg line='/s /c ""${programfilesX86}\Microsoft Visual Studio 9.0\VC\vcvarsall.bat" x86_amd64 &amp;&amp;' />
      <arg line='"${nantExe}" build"' />
    </exec>
    
    <exec program="cmd.exe" workingdir="v40\imports" if="${buildImports}">
      <arg line='/s /c ""${programfilesX86}\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" x86 &amp;&amp;' />
      <arg line='"${nantExe}" build"' />
    </exec>
    
    <exec program="cmd.exe" workingdir="v40\imports" if="${buildImports}">
      <arg line='/s /c ""${programfilesX86}\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" x86_amd64 &amp;&amp;' />
      <arg line='"${nantExe}" build"' />
    </exec>

    <echo file="imports/build/.imports-rev" message="${imports-rev}" />

    <exec program="svn.exe" output=".svn-info-svn"><arg line="info imports\build\win32\subversion --xml" /></exec>
    <xmlpeek file=".svn-info-svn" xpath="/info/entry/relative-url" property="svn-tag" />
    <property name="svn-tag" value="${path::get-file-name(svn-tag)}" />
    <property name="svn-ver" value="${string::replace(string::replace(string::replace(string::replace(svn-tag, '-alpha', '.'), '-beta', '.'),'-rc', '.'), '.x', '.0')}" />
    <choose>
      <when test="${svn-tag == 'trunk'>
        <property name="versionBase" value="1.55555" />
      </when>
      <when test="${svn-tag != svn-ver}">
        <property name="v" value="0" />
        <property name="v" value="1" if="${string::contains(svn-tag, 'alpha')}" />
        <property name="v" value="2" if="${string::contains(svn-tag, 'beta')}" />
        <property name="v" value="3" if="${string::contains(svn-tag, 'rc')}" />
        <property name="versionBase" value="1.${(version::get-minor(version::parse(svn-ver))-1) * 1000 + 990 + int::parse(v)}" />
      </when>
      <otherwise>
        <property name="versionBase" value="1.${(version::get-minor(version::parse(svn-ver))-1) * 1000 + version::get-build(version::parse(svn-ver)))" />
      </otherwise>
    </choose>

    <echo append="false" file="msbuildprops.txt">/P:AnnotatePdbFile=true
/P:ForceAssemblyCopyright="Copyright (c) 2006-${datetime::get-year(datetime::now())} The SharpSvn Project. This code and its source is licensed under the Apache 2.0 license. Check http://sharpsvn.net/ for details."
/P:ForceAssemblyCompany="SharpSvn - http://sharpsvn.net/"
/P:ForceAssemblyProduct="SharpSvn - Subversion support for .Net"
</echo>
    <if test="${property::exists('CCNetNumericLabel')}">
      <echo append="true" file="msbuildprops.txt">/P:ForceAssemblyVersion="${versionBase}.${checkout-rev}.${CCNetNumericLabel}"
</echo>
    </if>    
  </target>
  
  <target name="package">
  </target>
  
  <target name="buildbot-build" depends="build"></target>
  <target name="buildbot-package" depends="build,package"></target>
</project>
