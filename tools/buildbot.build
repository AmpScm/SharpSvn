<?xml version="1.0" ?>
<project basedir=".." default="build">
  <!-- This nant script is used by the SharpSvn buildbot -->

  <property name="programfilesX86" value="C:\Program Files (x86)" overwrite="false" />
  <property name="svnDist" value="false" overwrite="false" />

  <if test="${property::exists('build.include')}">
    <include buildfile="${build.include}" />
  </if>
  <include buildfile="imports/scripts/tasks.build" />

  <target name="prepare">

    <delete dir="release" if="${directory::exists('release')}" />
    <mkdir dir="release" />

    <foreach item="Folder" property="dir">
      <in>
        <items basedir=".">
          <include name="Jenkins_*_*" />
        </items>
      </in>
      <do>
        <delete dir="${dir}" />
      </do>
    </foreach>
  </target>

  <target name="build" depends="prepare">

    <VSWhere property="VCVarsAll" findPath="VC\Auxiliary\Build\vcvarsall.bat" />

    <NAntWithEnv unless="${svnDist}"
        env-script="${VCVarsAll}" env-args="x86"
        workingdir="imports" buildfile="imports\Default.build"
        target="build" />

    <NAntWithEnv unless="${svnDist}"
        env-script="${VCVarsAll}" env-args="x86_amd64"
        workingdir="imports" buildfile="imports\Default.build"
        target="build" />

    <NAntWithEnv unless="${svnDist}"
        env-script="${VCVarsAll}" env-args="x86_arm64"
        workingdir="imports" buildfile="imports\Default.build"
        target="build" />

    <NAntWithEnv if="${svnDist}"
        env-script="${VCVarsAll}" env-args="x86"
        workingdir="imports/svn-dist" buildfile="imports\svn-dist\Default.build"
        target="build-svn-dist" />

    <NAntWithEnv if="${svnDist}"
        env-script="${VCVarsAll}" env-args="x86_amd64"
        workingdir="imports/svn-dist" buildfile="imports\svn-dist\Default.build"
        target="build-svn-dist" />

    <NAntWithEnv if="${svnDist}"
        env-script="${VCVarsAll}" env-args="x86_arm64"
        workingdir="imports/svn-dist" buildfile="imports\svn-dist\Default.build"
        target="build-svn-dist" />

  </target>

  <target name="package-svndist" if="${property::exists('CCNetNumericLabel')}">

    <Svn output=".svn-info-svn">
      <arg line="info --xml" />
      <arg value="imports\build\win32\subversion" unless="${svnDist}" />
      <arg value="imports\svn-dist\build\win32\subversion" if="${svnDist}" />
    </Svn>
    <xmlpeek file=".svn-info-svn" xpath="/info/entry/url" property="svn-tag" />
    <property name="svn-tag" value="${path::get-file-name(string::replace(svn-tag,'://', '/'))}" />
    <property name="svn-ver" value="${string::replace(string::replace(string::replace(string::replace(svn-tag, '-alpha', '.'), '-beta', '.'),'-rc', '.'), '.x', '.0')}" />
    <choose>
      <when test="${svn-tag == 'trunk'}">
        <property name="versionBase" value="1.55555" />
      </when>
      <when test="${svn-tag != svn-ver}">
        <property name="v" value="0" />
        <property name="v" value="1" if="${string::contains(svn-tag, 'alpha')}" />
        <property name="v" value="2" if="${string::contains(svn-tag, 'beta')}" />
        <property name="v" value="3" if="${string::contains(svn-tag, 'rc')}" />
        <property name="versionBase" value="1.${(version::get-minor(version::parse(svn-ver))-1) * 1000 + 990 + int::parse(v)}" />
      </when>
      <otherwise>
        <property name="versionBase" value="1.${(version::get-minor(version::parse(svn-ver))) * 1000 + version::get-build(version::parse(svn-ver))}" />
      </otherwise>
    </choose>

    <property name="sliksvnVersion" value="${versionBase}.0.${CCNetNumericLabel}" />
    <property name="svnTag" value="${svn-tag}" />

    <property name="svnVersion" value="${version::get-major(version::parse(sliksvnVersion))}.${version::get-minor(version::parse(sliksvnVersion)) / 1000}.${version::get-minor(version::parse(sliksvnVersion)) % 1000}" />
    <property name="distVersion" value="${version::get-major(version::parse(sliksvnVersion))}.${version::get-minor(version::parse(sliksvnVersion)) / 1000}" />
    <choose>
      <when test="${(version::get-minor(version::parse(sliksvnVersion)) % 1000) &gt; 900}">
        <property name="distVersion" value="${version::get-major(version::parse(sliksvnVersion))}.${(version::get-minor(version::parse(sliksvnVersion)) / 1000) + 1}.${version::get-revision(version::parse(sliksvnVersion))}" />
      </when>
      <otherwise>
        <property name="distVersion" value="${distVersion}.${(version::get-minor(version::parse(sliksvnVersion)) % 1000) * 1000 + version::get-revision(version::parse(sliksvnVersion))}" />
      </otherwise>
    </choose>

    <delete>
      <fileset basedir="imports\svn-dist\wix">
        <include name="bin/**" />
        <include name="obj/**" />
      </fileset>
    </delete>

    <exec program="cmd.exe" workingdir="imports\svn-dist">
      <arg line='/s /c ""${programfilesX86}\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86 &amp;&amp;' />
      <arg line='msbuild wix\SlikSvn.sln /p:Configuration=Release /p:Platform=x86 /p:DistVersion=${distVersion} /p:SvnVersion=${svnVersion} "/p:SvnFullVersion=${svnTag}" /p:DistBuild=true"' />
    </exec>

    <exec program="cmd.exe" workingdir="imports\svn-dist">
      <arg line='/s /c ""${programfilesX86}\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86 &amp;&amp;' />
      <arg line='msbuild wix\SlikSvn.sln /p:Configuration=Release /p:Platform=x64 /p:DistVersion=${distVersion} /p:SvnVersion=${svnVersion} "/p:SvnFullVersion=${svnTag}" /p:DistBuild=true"' />
    </exec>

    <copy todir="release" flatten="true">
      <fileset basedir="imports\svn-dist\wix\bin">
        <include name="*-Subversion-${svnTag}*.msi" />
      </fileset>
    </copy>

    <copy todir="release">
      <fileset basedir="imports\svn-dist\dist-win32">
        <include name="Symbols*${svnTag}*.zip" />
      </fileset>
    </copy>

    <copy todir="release">
      <fileset basedir="imports\svn-dist\dist-x64">
        <include name="Symbols*${svnTag}*.zip" />
      </fileset>
    </copy>
  </target>

  <target name="buildbot-build" depends="build"></target>
</project>
