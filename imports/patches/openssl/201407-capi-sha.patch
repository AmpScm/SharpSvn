Index: engines/e_capi.c
===================================================================
--- engines/e_capi.c	(revision 19895)
+++ engines/e_capi.c	(working copy)
@@ -109,6 +109,34 @@
 #define CERT_SYSTEM_STORE_CURRENT_USER			0x00010000
 #endif 
 
+#ifndef ALG_SID_SHA_256
+#define ALG_SID_SHA_256                 12
+#endif
+#ifndef ALG_SID_SHA_384
+#define ALG_SID_SHA_384                 13
+#endif
+#ifndef ALG_SID_SHA_512
+#define ALG_SID_SHA_512                 14
+#endif
+
+#ifndef CALG_SHA_256
+#define CALG_SHA_256            (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA_256)
+#endif
+#ifndef CALG_SHA_384 
+#define CALG_SHA_384            (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA_384)
+#endif
+#ifndef CALG_SHA_512 
+#define CALG_SHA_512            (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA_512)
+#endif
+
+#ifndef MS_ENH_RSA_AES_PROV_A
+#define MS_ENH_RSA_AES_PROV_A   "Microsoft Enhanced RSA and AES Cryptographic Provider"
+#endif
+
+#ifndef PROV_RSA_AES
+#define PROV_RSA_AES 24
+#endif
+
 #include <openssl/engine.h>
 #include <openssl/pem.h>
 #include <openssl/x509v3.h>
@@ -816,6 +844,18 @@ int capi_rsa_sign(int dtype, const unsigned char *
 /* Convert the signature type to a CryptoAPI algorithm ID */
 	switch(dtype)
 		{
+	case NID_sha256:
+		alg = CALG_SHA_256;
+		break;
+
+	case NID_sha384:
+		alg = CALG_SHA_384;
+		break;
+
+	case NID_sha512:
+		alg = CALG_SHA_512;
+		break;
+
 	case NID_sha1:
 		alg = CALG_SHA1;
 		break;
@@ -1438,6 +1478,10 @@ static CAPI_KEY *capi_get_key(CAPI_CTX *ctx, const
 						contname, provname, ptype);
     if(ctx->store_flags & CERT_SYSTEM_STORE_LOCAL_MACHINE)
         dwFlags = CRYPT_MACHINE_KEYSET;
+    if ((ptype == PROV_RSA_FULL)
+        && !strcmp(provname, MS_ENHANCED_PROV_A)
+        && CryptAcquireContextA(&key->hprov, contname, MS_ENH_RSA_AES_PROV_A, PROV_RSA_AES, dwFlags))
+    {} else
     if (!CryptAcquireContextA(&key->hprov, contname, provname, ptype, dwFlags)) 
 		{
 		CAPIerr(CAPI_F_CAPI_GET_KEY, CAPI_R_CRYPTACQUIRECONTEXT_ERROR);
