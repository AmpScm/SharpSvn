<?xml version="1.0" encoding="utf-8"?>
<project basedir=".." default="build">
  <property name="opensslFilename" value="openssl-${opensslVersion}.tar.gz" />
  <property name="opensslDir" value="build/${platform}/openssl-${opensslVersion}" />

  <target name="prepare-openssl" depends="extract, build-zlib">
    <OnceBlock file="build/openssl-${opensslVersion}-${platform}.prepared">
      <exec program="perl.exe" workingdir="${opensslDir}">
        <arg value="Configure" />
        <arg value="VC-WIN32" if="${platform=='win32'}" />
        <arg value="VC-WIN64A" if="${platform=='x64'}" />
        <arg value="-D_CRT_NONSTDC_NO_DEPRECATE" />
        <arg value="-D_CRT_SECURE_NO_DEPRECATE" />
        <arg value="no-asm" if="${platform=='x64'}" />
        <arg value="no-dso"/>
        <arg value="no-shared" />
        <arg value="no-krb5"/>
        <arg value="no-hw"/>
        <arg value="zlib" />
        <arg value="enable-tlsext" />
        <arg value="--with-zlib-lib=${releaseLib}/zlib.lib" />
        <arg value="--with-zlib-include=${string::replace(release,'\','/')}/include" />
      </exec>
    </OnceBlock>
    <OnceBlock file="build/openssl-${opensslVersion}-${platform}.initialized">
      <exec program="cmd.exe" workingdir="${opensslDir}" if="${platform=='win32'}">
        <arg line="/c ms\do_ms.bat" />
      </exec>
      <exec program="cmd.exe" workingdir="${opensslDir}" if="${platform=='x64'}">
        <arg line="/c ms\do_win64a.bat" />
      </exec>
      <if test="${static != 'true'}">
        <loadfile file="${opensslDir}/ms/libeay32.def" property="def">
          <filterchain>
            <replacestring from="LIBEAY32" to="${dllPrefix}LIBEAY32" if="${dllPrefix != ''}" />
          </filterchain>
        </loadfile>
        <echo message="${def}" file="${opensslDir}/ms/libeay32.def" />
        <loadfile file="${opensslDir}/ms/ssleay32.def" property="def">
          <filterchain>
            <replacestring from="SSLEAY32" to="${dllPrefix}SSLEAY32" if="${dllPrefix != ''}" />
          </filterchain>
        </loadfile>
        <echo message="${def}" file="${opensslDir}/ms/ssleay32.def" />
        <loadfile file="${opensslDir}/ms/ntdll.mak" property="mk">
          <filterchain>
            <replacestring from="$(LIB_D)\$(SSL).dll" to="$(LIB_D)\${dllPrefix}$(SSL).dll" if="${dllPrefix != ''}" />
            <replacestring from="$(LIB_D)\$(CRYPTO).dll" to="$(LIB_D)\${dllPrefix}$(CRYPTO).dll" if="${dllPrefix != ''}" />
            <replacestring from="/out:$(O_SSL)" to="/out:$(O_SSL) /IMPLIB:$(L_SSL)" />
            <replacestring from="/out:$(O_CRYPTO)" to="/out:$(O_CRYPTO) /IMPLIB:$(L_CRYPTO)" />
            <replacestring from=" /MT " to=" /MD " />
          </filterchain>
        </loadfile>
        <echo message="${mk}" file="${opensslDir}/ms/ntdll.mak" />
      </if>
      <loadfile file="${opensslDir}/ms/nt.mak" property="mk">
        <filterchain>
          <replacestring from=" /MT " to=" /MD " />
        </filterchain>
      </loadfile>
      <echo message="${mk}" file="${opensslDir}/ms/nt.mak" />
    </OnceBlock>
  </target>
  <target name="build-openssl" depends="prepare-openssl">
    <OnceBlock file="build/openssl-${opensslVersion}-${platform}.build">
      <exec program="nmake.exe" workingdir="${opensslDir}">
        <arg line="-f ms\nt.mak" if="${static == 'true'}" />
        <arg line="-f ms\ntdll.mak" if="${static != 'true'}" />
      </exec>
    </OnceBlock>
    <copy todir="build/${platform}/openssl-${opensslVersion}/out32" if="${static != 'true'}">
      <fileset basedir="build/${platform}/openssl-${opensslVersion}/out32dll">
        <include name="*.lib" />
        <include name="*.exp" />
        <include name="*.pdb" />
      </fileset>
    </copy>
    <copy todir="${release}/lib" flatten="true">
      <fileset basedir="build/win32/openssl-${opensslVersion}">
        <include name="out32/*.lib" />
        <include name="out32/*.exp" />
        <include name="out32/*.pdb" />
        <include name="out32dll/*.lib" />
        <include name="out32dll/*.exp" />
        <include name="out32dll/*.pdb" />
      </fileset>
    </copy>
    <copy todir="${release}/bin" flatten="true">
      <fileset basedir="build/win32/openssl-${opensslVersion}/out32dll">
        <include name="*.dll" />
      </fileset>
    </copy>
    <copy todir="${release}/bin/x64" flatten="true">
      <fileset basedir="build/x64/openssl-${opensslVersion}/out32dll">
        <include name="*.dll" />
      </fileset>
    </copy>
    <copy todir="${release}/lib-x64" flatten="true">
      <fileset basedir="build/x64/openssl-${opensslVersion}">
        <include name="out32/*.lib" />
        <include name="out32/*.exp" />
        <include name="out32/*.pdb" />
        <include name="out32dll/*.lib" />
        <include name="out32dll/*.exp" />
        <include name="out32dll/*.pdb" />
      </fileset>
    </copy>
    <copy todir="${release}/include">
      <fileset basedir="${opensslDir}/inc32">
        <include name="**/*.h" />
      </fileset>
    </copy>
  </target>
</project>
