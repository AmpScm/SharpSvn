<?xml version="1.0" ?>
<project basedir=".." default="build">
	<property name="Configuration" value="Release" />
	<property name="dllPrefix" value="SharpSvn-" />
	<property name="dbDllName" value="SharpSvn-DB${string::replace(dbVersion, '.','-')}" />

	<if test="${platform != 'win32' and platform != 'x64'}">
		<fail message="Platform must be win32 or x64 at this time" />
	</if>

	<property name="build-WIN32" value="true" />
	<property name="build-WIN64-X64" value="false" />

	<setenv>
		<variable name="OPENSSL_STATIC" value="1" />
		<variable name="ENABLE_IPV6" value="1" />
	</setenv>

	<property name="Configuration" value="release" />
	<property name="release" value="release" />

	<include buildfile="tasks.build" />

	<include buildfile="build-prepare.build" />

	<include buildfile="build-bdb.build" />
	<include buildfile="build-zlib.build" />
	<include buildfile="build-openssl.build" />
	<include buildfile="build-serf.build" />
	<include buildfile="build-neon.build" />
	<include buildfile="build-apr.build" />
	<include buildfile="build-sasl.build" />
	<include buildfile="build-subversion.build" />
	<!-- SharpDns -->
	<include buildfile="build-bind.build" />

	<target name="clean">
		<delete>
			<fileset basedir="build" defaultexcludes="false">
				<include name="**" />
			</fileset>
		</delete>
		<delete>
			<fileset basedir="release">
				<include name="**" />
			</fileset>
		</delete>
	</target>

	<target name="distclean" depends="clean">
		<delete>
			<fileset basedir="downloads">
				<include name="**" />
			</fileset>
		</delete>
		<delete>
			<fileset basedir="release">
				<include name="**" />
			</fileset>
		</delete>
	</target>

	<target name="win32" depends="x86">
	</target>
	
	<target name="x86">
		<exec program="${environment::get-variable('comspec')}">
			<arg line='/s /c ""${vcVarsPath}\vcvarsall.bat" x86 &amp;&amp; nant "-buildfile:${project::get-buildfile-path()}" /D:platform=win32 build"' />
		</exec>
	</target>
		
	<target name="x64">
		<exec program="${environment::get-variable('comspec')}">
			<arg line='/s /c ""${vcVarsPath}\vcvarsall.bat" x86_amd64 &amp;&amp; nant "-buildfile:${project::get-buildfile-path()}" /D:platform=x64 build"' />
		</exec>
	</target>
			
	<property name="nunitFilename" value="NUnit-${nunitVersion}-net-2.0.zip" />	
	<property name="nunitDir" value="${'build/nunit-' + nunitVersion}" />	
	

	<target name="build" depends="download,extract,checkout, build-svn, build-bind, copy-result">

	</target>
	<target name="clean-svn" depends="update-svn">
		<delete>
			<fileset basedir="${release}">
				<include name="lib/**" if="${platform == 'win32'}" />
				<include name="lib-${platform}/**" if="${platform != 'win32'}" />
				<include name="bin/*-${platform}.exe" />
				<include name="bin/*-${platform}.dll" />
			</fileset>
		</delete>
	</target>
	<target name="update-svn">
		<delete>
			<fileset basedir="build">
				<include name="subversion*_${platform}.*" />
				<include name="serf*_${platform}.*" />
				<include name="neon*_${platform}.*" />
				<include name="${platform}/subversion/${Configuration}/**" />
			</fileset>
		</delete>
		<Svn nonInteractive="false">
			<arg line="revert -R build/${platform}/subversion" />
		</Svn>
		<Svn nonInteractive="false">
			<arg line="revert -R build/${platform}/neon" />
		</Svn>
		<Svn nonInteractive="false">
			<arg line="revert -R build/${platform}/serf" />
		</Svn>
		<Svn>
			<arg line="up build/${platform}/subversion" />
		</Svn>
		<Svn>
			<arg line="up build/${platform}/neon" />
		</Svn>
		<Svn>
			<arg line="up build/${platform}/serf" />
		</Svn>
	</target>
</project>

